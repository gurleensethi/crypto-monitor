{"version":3,"sources":["components/TextLoading.module.css","components/WatchAssetList.module.css","pages/Asset.module.css","api/crypto-api.ts","hooks/useDeleteWatchIdMutation.tsx","components/TextLoading.tsx","hooks/useAddToWatchIdMutation.tsx","components/AssetList.tsx","components/WatchAsset.tsx","components/WatchAssetList.tsx","context/GlobalUI.tsx","pages/Home.tsx","hooks/useGlobalUI.tsx","pages/Asset.tsx","App.tsx","index.tsx","components/AssetList.module.css","components/WatchAsset.module.css"],"names":["module","exports","WATCH_IDS_KEY","a","axios","get","then","res","data","getAssetById","id","getWatchIds","stringData","window","localStorage","getItem","JSON","parse","ids","setItem","stringify","rest","interval","useDeleteWatchIdsMutation","queryClient","useQueryClient","mutation","useMutation","deleteFromWatchIds","onSuccess","_","setQueryData","prevData","invalidateQueries","reset","TextLoading","children","className","useState","loadingText","setLoadingText","ref","useRef","useEffect","current","setInterval","text","length","clearInterval","clsx","styles","useAddToWatchIdMutation","addToWatchIds","AssetList","assetsQuery","useQuery","getAssets","refetchInterval","watchIdsQuery","addToWatchIdsMutation","deleteFromWatchIdsMutation","isLoading","loading","isError","onClick","refetch","map","item","isBeingWatched","to","name","symbol","Math","round","Number","priceUsd","e","preventDefault","isIdle","mutate","handleAddToWatchIds","WatchAssetItem","history","useHistory","assetQuery","push","stopPropagation","WatchAssetList","watchingAssetsQuery","container","isFetching","Object","keys","initialState","showAssets","reducer","state","action","type","GlobalUIContext","createContext","GlobalUIProvider","useReducer","dispatch","value","useMemo","Provider","HomePage","globalUI","context","useContext","Error","useGlobalUI","href","target","rel","AssetPage","assetId","useParams","priceHistory","getPriceHistory","enabled","cacheTime","style","display","toFixed","marketCapUsd","supply","maxSupply","changePercent24Hr","ResponsiveContainer","width","height","LineChart","price","date","Date","toDateString","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","stroke","strokeWidth","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","App","QueryClientProvider","client","basename","process","exact","path","component","initialIsOpen","position","ReactDOM","render","document","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,cAAgB,qC,oBCArFD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,mBAAmB,2C,yCCAnFD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,cAAc,2BAA2B,MAAQ,qBAAqB,UAAY,yBAAyB,YAAc,2BAA2B,aAAe,4BAA4B,eAAiB,8BAA8B,aAAe,4BAA4B,gBAAgB,6BAA6B,uBAAuB,sC,mKCE7XC,EAAgB,Y,4CAEtB,sBAAAC,EAAA,+EACEC,IACJC,IAAuB,oCACvBC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKA,SAHrB,4C,sBAMA,SAAeC,EAAtB,kC,4CAAO,WAA4BC,GAA5B,SAAAP,EAAA,+EACEC,IACJC,IADI,2CACqDK,IACzDJ,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKA,SAHrB,4C,sBAMA,SAAeG,IAAtB,+B,4CAAO,4BAAAR,EAAA,yDACCS,EAAaC,OAAOC,aAAaC,QAAQb,GAD1C,yCAII,IAJJ,gCAOEc,KAAKC,MAAML,IAPb,4C,kEAUA,WAA6BF,GAA7B,eAAAP,EAAA,sEACaQ,IADb,QACCO,EADD,QAEDR,IAAM,EACVG,OAAOC,aAAaK,QAAQjB,EAAec,KAAKI,UAAUF,IAHrD,4C,kEAMA,WAAkCR,GAAlC,iBAAAP,EAAA,sEACaQ,IADb,OACCO,EADD,OAEkCA,EAA9BR,GAAqBW,EAFzB,YAEkCH,EAFlC,CAEIR,GAFJ,UAGLG,OAAOC,aAAaK,QAAQjB,EAAec,KAAKI,UAAUC,IAHrD,4C,kEAMA,WACLX,GADK,2BAAAP,EAAA,6DAELmB,EAFK,+BAEc,KAFd,kBAIElB,IACJC,IADI,2CAEiCK,EAFjC,6BAEwDY,IAE5DhB,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKA,SARrB,4C,4CCpCMe,EAA4B,WACvC,IAAMC,EAAcC,cAEdC,EAAWC,YACf,mBACA,SAACjB,GAAD,ODyBG,SAAP,kCCzBYkB,CAAmBlB,KAC3B,CACEmB,UAAW,SAACC,EAAGpB,GACbc,EAAYO,aACV,mBACA,SAACC,GACC,GAAIA,EAAU,CACwBA,EAA3BtB,GACT,OAFY,YACwBsB,EADxB,CACHtB,GADG,UAId,MAAO,MAGXc,EAAYS,kBAAkB,mBAC9BP,EAASQ,WAKf,OAAOR,G,iECpBIS,EAAoC,SAAC,GAI3C,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,UACGhB,EACC,0CACkCiB,mBAAS,IAD3C,mBACGC,EADH,KACgBC,EADhB,KAEEC,EAAMC,iBAA8B,MAoB1C,OAlBAC,qBAAU,WAWR,OAVAF,EAAIG,QAAUC,aAAY,WACxBL,GAAe,SAACM,GACd,OAAIA,EAAKC,QAAU,EACV,GAGFD,EAAO,SAEf,KAEI,WACDL,EAAIG,SACNI,cAAcP,EAAIG,YAGrB,IAGD,8CAAKP,UAAWY,YAAKC,IAAM,cAAmBb,IAAgBhB,GAA9D,cACGe,EACD,sBAAMC,UAAWa,IAAM,cAAvB,SAA2CX,S,SCjCpCY,EAA0B,WACrC,IAAM3B,EAAcC,cAEdC,EAAWC,aAA+B,SAACjB,GAAD,OHqB3C,SAAP,kCGrB0D0C,CAAc1C,KAAK,CACzEmB,UAAW,SAACC,EAAGpB,GACbc,EAAYO,aACV,mBACA,SAACC,GAAD,mBAAC,eAAmBA,GAApB,kBAA+BtB,GAAK,OAEtCc,EAAYS,kBAAkB,mBAC9BP,EAASQ,WAIb,OAAOR,GCPI2B,EAAgB,WAC3B,IAAMC,EAAcC,YAAS,UAAU,kBJNlC,WAAP,+BIM+CC,KAAa,CACxDC,gBAAiB,OAEbC,EAAgBH,YAAS,mBAAmB,kBAAM5C,OAClDgD,EAAwBR,IACxBS,EAA6BrC,IAcnC,OAAI+B,EAAYO,UAEZ,cAAC,EAAD,CAAaxB,UAAWa,IAAOY,QAA/B,mCAMAR,EAAYS,QAEZ,qCACE,qBAAK1B,UAAWa,IAAM,YAAtB,oCACA,wBAAQb,UAAU,MAAM2B,QAAS,kBAAMV,EAAYW,WAAnD,wBAQJ,8BACGX,EAAY9C,MACX8C,EAAY9C,KAAK0D,KAAI,SAACC,GACpB,IAAMC,EACJV,EAAclD,MAAQkD,EAAclD,KAAK2D,EAAKzD,IAEhD,OACE,cAAC,IAAD,CAAM2D,GAAE,WAAMF,EAAKzD,IAAM2B,UAAWa,IAAM,KAA1C,SACE,sBAAKb,UAAWa,IAAO,cAAvB,UACE,gCACE,qBAAKb,UAAWa,IAAO,oBAAvB,SAA6CiB,EAAKG,OAClD,qBAAKjC,UAAWa,IAAO,sBAAvB,SACGiB,EAAKI,YAGV,qBAAKlC,UAAWa,IAAO,qBAAvB,SACGsB,KAAKC,MAA8B,IAAxBC,OAAOP,EAAKQ,WAAqB,MAE/C,wBACEtC,UAAWY,YACT,MACAC,IAAO,qBACPkB,GAAkB,gBAEpBJ,QAAS,SAACY,GAlDO,IAAClE,EAmDhBkE,EAAEC,iBACET,GApDY1D,EAqDWyD,EAAKzD,GApD5CkD,EAA2BkB,QAC7BlB,EAA2BmB,OAAOrE,IARV,SAACA,GACvBiD,EAAsBmB,QACxBnB,EAAsBoB,OAAOrE,GA2DbsE,CAAoBb,EAAKzD,KAX/B,SAeG0D,EAAiB,UAAY,YAzBSD,EAAKzD,Y,iBC9CjDuE,EAA0C,SAAC,GAAY,IAAVvE,EAAS,EAATA,GAClDwE,EAAUC,cACVC,EAAa7B,YAAS,CAAC,SAAU7C,IAAK,kBAAMD,EAAaC,KAAK,CAClE+C,gBAAiB,OAGbG,EAA6BrC,IAYnC,OACE,qBAAKc,UAAWa,IAAO,eAAgBc,QALhB,WACvBkB,EAAQG,KAAR,WAAiB3E,KAIjB,SACG0E,EAAWvB,UACV,qCACE,qBAAKxB,UAAWa,IAAO,mBAAvB,SAA4CxC,IAC5C,cAAC,EAAD,yBAGF0E,EAAW5E,MACT,qCACE,gCACE,qBAAK6B,UAAWa,IAAO,qBAAvB,SACGkC,EAAW5E,KAAK8D,OAEnB,qBAAKjC,UAAWa,IAAO,uBAAvB,SACGkC,EAAW5E,KAAK+D,SAEnB,qBAAKlC,UAAWa,IAAO,sBAAvB,SACGsB,KAAKC,MAAyC,IAAnCC,OAAOU,EAAW5E,KAAKmE,WAAqB,SAG5D,wBAAQtC,UAAW,mBAAoB2B,QA/BtB,SAACY,GAC1BA,EAAEU,kBACFV,EAAEC,iBACFjB,EAA2BmB,OAAOrE,IA4B1B,2B,kBC1CC6E,EAA0C,WACrD,IAAMC,EAAsBjC,YAAS,mBAAmB,kBAAM5C,OAE9D,OACE,sBAAK0B,UAAWa,IAAOuC,UAAvB,UACE,iDACCD,EAAoB3B,WAClB2B,EAAoBE,YAAc,cAAC,EAAD,sBACpCF,EAAoBhF,MAC8B,IAAjDmF,OAAOC,KAAKJ,EAAoBhF,MAAMuC,QACpC,oFAEHyC,EAAoBhF,MACnB,qBAAK6B,UAAWa,IAAO,oBAAvB,SACGyC,OAAOC,KAAKJ,EAAoBhF,MAAM0D,KAAI,SAACC,GAC1C,OAAO,cAAC,EAAD,CAAgBzD,GAAIyD,GAAWA,YCjBrC0B,EAAsB,CAAEC,YAAY,GAEpCC,EAAU,SAACC,EAAcC,GACpC,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BAAKF,GAAZ,IAAmBF,YAAY,IAEjC,IAAK,kBACH,OAAO,2BAAKE,GAAZ,IAAmBF,YAAY,IAEjC,QACE,OAAOE,IAUAG,EAAkBC,wBAAmC,MAErDC,EAAuB,SAAC,GAAkB,IAAhBjE,EAAe,EAAfA,SAAe,EAC1BkE,qBAAWP,EAASF,GADM,mBAC7CG,EAD6C,KACtCO,EADsC,KAG9CC,EAAQC,mBAAQ,WACpB,MAAO,CAAET,QAAOO,cACf,CAACP,IAEJ,OACE,cAACG,EAAgBO,SAAjB,CAA0BF,MAAOA,EAAjC,SACGpE,KClCMuE,EAAe,WAC1B,IAAMC,ECHmB,WACzB,IAAMC,EAAUC,qBAAWX,GAE3B,IAAKU,EACH,MAAM,IAAIE,MAAJ,sCAGR,OAAOF,EDJUG,GAUjB,OACE,gCACE,gDACA,sDACuB,iDADvB,2CACwE,IACtE,mBACEC,KAAK,iDACLC,OAAO,SACPC,IAAI,aAHN,sBAQF,uBACA,cAAC,EAAD,IACA,wBAAQ9E,UAAU,MAAM2B,QAvBG,WACzB4C,EAASZ,MAAMF,WACjBc,EAASL,SAAS,CAAEL,KAAM,oBAE1BU,EAASL,SAAS,CAAEL,KAAM,mBAmB1B,SACGU,EAASZ,MAAMF,WAAa,kBAAoB,oBAElDc,EAASZ,MAAMF,YACd,qCACE,wCACA,cAAC,EAAD,W,yGEfGsB,GAAgB,WAAO,IAAD,EACzBC,EAAYC,cAAZD,QAEFjC,EAAa7B,YACjB,CAAC,SAAU8D,IACX,kBAAM5G,EAAa4G,KACnB,CAAE5D,gBAAiB,OAGf8D,EAAehE,YACnB,CAAC,SAAU8D,EAAS,YACpB,kBVMG,SAAP,kCUNUG,CAAgBH,KACtB,CAAEI,WAAU,UAACrC,EAAW5E,YAAZ,aAAC,EAAiBE,IAAIgH,UAAW,IAG/C,OAAItC,EAAWvB,UACN,cAAC,EAAD,sBAGLuB,EAAWrB,QAEX,gCACE,iGAGA,cAAC,IAAD,CAAMM,GAAG,IAAT,SACE,wBAAQhC,UAAWY,YAAK,MAAOC,KAAO,gBAAtC,0BASN,gCACE,cAAC,IAAD,CAAMmB,GAAG,IAAIhC,UAAWa,KAAM,KAA9B,SACG,YAEFkC,EAAW5E,MACV,qCACE,sBAAK6B,UAAWa,KAAM,MAAtB,UACE,sBAAKb,UAAWa,KAAM,UAAtB,cAAuCkC,EAAW5E,KAAKE,GAAvD,OACA,qBAAI2B,UAAWa,KAAM,YAArB,UACE,sBACEb,UAAU,eACVsF,MAAO,CAAEC,QAAS,gBAFpB,0BAKQ,IACPxC,EAAW5E,KAAK8D,QAEnB,qBAAKjC,UAAWa,KAAM,aAAtB,SACGwB,OAAOU,EAAW5E,KAAKmE,UAAUkD,QAAQ,KAE5C,sBAAKxF,UAAWa,KAAM,eAAtB,UACE,gCACE,oBAAIb,UAAWa,KAAM,aAArB,qCACA,mBAAGb,UAAWa,KAAM,aAApB,SACGwB,OAAOU,EAAW5E,KAAKsH,cAAcD,QAAQ,QAGlD,gCACE,oBAAIxF,UAAWa,KAAM,aAArB,iCACA,mBAAGb,UAAWa,KAAM,aAApB,SACGwB,OAAOU,EAAW5E,KAAKuH,QAAQF,QAAQ,QAG5C,gCACE,oBAAIxF,UAAWa,KAAM,aAArB,qCACA,mBAAGb,UAAWa,KAAM,aAApB,SACGkC,EAAW5E,KAAKwH,UACbtD,OAAOU,EAAW5E,KAAKwH,WAAWH,QAAQ,GAC1C,WAGR,gCACE,oBAAIxF,UAAWa,KAAM,aAArB,kCACA,mBAAGb,UAAWa,KAAM,aAApB,SACGwB,OAAOU,EAAW5E,KAAKyH,mBAAmBJ,QAAQ,cAK3D,sBAAKxF,UAAWa,KAAO,iBAAvB,UACE,+CACCqE,EAAa1D,WACZ,cAAC,EAAD,oCAED0D,EAAa/G,MACZ,cAAC0H,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQ,IAA1C,SACE,eAACC,GAAA,EAAD,CACEhG,UAAWa,KAAO,wBAClB1C,KAAM+G,EAAa/G,KAAK0D,KAAI,SAACC,GAAD,MAAW,CACrCmE,MAAO5D,OAAOP,EAAKQ,UACnB4D,KAAM,IAAIC,KAAKrE,EAAKoE,MAAME,mBAJ9B,UAOE,cAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,GAAA,EAAD,CAAOC,OAAQ,CAAC,aAChB,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACE9C,KAAK,QACLyC,QAAQ,QACRM,OAAO,QACPC,YAAa,qBCvH3B1H,GAAc,IAAI2H,IAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,EACtBC,OAAO,MAKAC,GAAU,WACrB,OACE,qBAAKnH,UAAU,MAAf,SACE,cAAC,EAAD,UACE,eAACoH,EAAA,EAAD,CAAqBC,OAAQlI,GAA7B,UACE,cAAC,IAAD,CAAemI,SAAUC,kBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW3C,KACzC,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,SAGrC,cAAC,qBAAD,CAAoBqD,eAAe,EAAOC,SAAS,yBC1B7DC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,U,mBCFjDrK,EAAOC,QAAU,CAAC,YAAc,+BAA+B,KAAO,wBAAwB,aAAa,8BAA8B,mBAAmB,oCAAoC,qBAAqB,sCAAsC,oBAAoB,uC,mBCA/QD,EAAOC,QAAU,CAAC,cAAc,gCAAgC,kBAAkB,oCAAoC,oBAAoB,sCAAsC,sBAAsB,wCAAwC,qBAAqB,0C","file":"static/js/main.8dc0744f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading__text\":\"TextLoading_loading__text__1avi-\",\"loading__dots\":\"TextLoading_loading__dots__1NLBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WatchAssetList_container__34Q-I\",\"watch-asset-list\":\"WatchAssetList_watch-asset-list__31dy9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Asset_back__2wIB1\",\"home-button\":\"Asset_home-button__2HMpG\",\"asset\":\"Asset_asset__2BQSx\",\"asset__id\":\"Asset_asset__id__1ROPK\",\"asset__name\":\"Asset_asset__name__2FHJl\",\"asset__price\":\"Asset_asset__price__1Z8vP\",\"asset__details\":\"Asset_asset__details__2Kdns\",\"asset__value\":\"Asset_asset__value__3Q7sf\",\"price-history\":\"Asset_price-history__2qtIE\",\"price-history__chart\":\"Asset_price-history__chart__3YfgS\"};","import axios from \"axios\";\nimport { Asset, Price } from \".\";\n\nexport const WATCH_IDS_KEY = \"watch_ids\";\n\nexport async function getAssets(): Promise<Asset[]> {\n  return axios\n    .get<{ data: Asset[] }>(\"https://api.coincap.io/v2/assets\")\n    .then((res) => res.data.data);\n}\n\nexport async function getAssetById(id: string): Promise<Asset> {\n  return axios\n    .get<{ data: Asset }>(`https://api.coincap.io/v2/assets/${id}`)\n    .then((res) => res.data.data);\n}\n\nexport async function getWatchIds(): Promise<Record<string, boolean>> {\n  const stringData = window.localStorage.getItem(WATCH_IDS_KEY);\n\n  if (!stringData) {\n    return {};\n  }\n\n  return JSON.parse(stringData);\n}\n\nexport async function addToWatchIds(id: string): Promise<void> {\n  const ids = await getWatchIds();\n  ids[id] = true;\n  window.localStorage.setItem(WATCH_IDS_KEY, JSON.stringify(ids));\n}\n\nexport async function deleteFromWatchIds(id: string): Promise<void> {\n  const ids = await getWatchIds();\n  const { [id]: toBeDeleted, ...rest } = ids;\n  window.localStorage.setItem(WATCH_IDS_KEY, JSON.stringify(rest));\n}\n\nexport async function getPriceHistory(\n  id: string,\n  interval: string = \"m1\"\n): Promise<Price[]> {\n  return axios\n    .get<{ data: Price[] }>(\n      `https://api.coincap.io/v2/assets/${id}/history?interval=${interval}`\n    )\n    .then((res) => res.data.data);\n}\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { deleteFromWatchIds } from \"../api\";\n\nexport const useDeleteWatchIdsMutation = () => {\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation<void, any, string>(\n    \"watching_assets\",\n    (id) => deleteFromWatchIds(id),\n    {\n      onSuccess: (_, id) => {\n        queryClient.setQueryData<Record<string, boolean>>(\n          \"watching_assets\",\n          (prevData) => {\n            if (prevData) {\n              const { [id]: toDelete, ...rest } = prevData;\n              return rest;\n            }\n            return {};\n          }\n        );\n        queryClient.invalidateQueries(\"watching_assets\");\n        mutation.reset();\n      },\n    }\n  );\n\n  return mutation;\n};\n","import clsx from \"clsx\";\nimport React, { FC, useEffect, useRef, useState } from \"react\";\nimport styles from \"./TextLoading.module.css\";\n\nexport interface TextLoadingProps\n  extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const TextLoading: FC<TextLoadingProps> = ({\n  children,\n  className,\n  ...rest\n}) => {\n  const [loadingText, setLoadingText] = useState(\"\");\n  const ref = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    ref.current = setInterval(() => {\n      setLoadingText((text) => {\n        if (text.length >= 3) {\n          return \"\";\n        }\n\n        return text + \".\";\n      });\n    }, 200);\n\n    return () => {\n      if (ref.current) {\n        clearInterval(ref.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div className={clsx(styles[\"loading__text\"], className)} {...rest}>\n      {children}\n      <span className={styles[\"loading__dots\"]}>{loadingText}</span>\n    </div>\n  );\n};\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { addToWatchIds } from \"../api\";\n\nexport const useAddToWatchIdMutation = () => {\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation<void, any, string>((id) => addToWatchIds(id), {\n    onSuccess: (_, id) => {\n      queryClient.setQueryData<Record<string, boolean>>(\n        \"watching_assets\",\n        (prevData) => ({ ...prevData, [id]: true })\n      );\n      queryClient.invalidateQueries(\"watching_assets\");\n      mutation.reset();\n    },\n  });\n\n  return mutation;\n};\n","import clsx from \"clsx\";\nimport { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getAssets, getWatchIds } from \"../api\";\nimport { useDeleteWatchIdsMutation } from \"../hooks/useDeleteWatchIdMutation\";\nimport styles from \"./AssetList.module.css\";\nimport { TextLoading } from \"./TextLoading\";\nimport { Link } from \"react-router-dom\";\nimport { useAddToWatchIdMutation } from \"../hooks/useAddToWatchIdMutation\";\n\nexport const AssetList: FC = () => {\n  const assetsQuery = useQuery(\"assets\", () => getAssets(), {\n    refetchInterval: 1500,\n  });\n  const watchIdsQuery = useQuery(\"watching_assets\", () => getWatchIds());\n  const addToWatchIdsMutation = useAddToWatchIdMutation();\n  const deleteFromWatchIdsMutation = useDeleteWatchIdsMutation();\n\n  const handleAddToWatchIds = (id: string) => {\n    if (addToWatchIdsMutation.isIdle) {\n      addToWatchIdsMutation.mutate(id);\n    }\n  };\n\n  const handleDeleteFromWatchIds = (id: string) => {\n    if (deleteFromWatchIdsMutation.isIdle) {\n      deleteFromWatchIdsMutation.mutate(id);\n    }\n  };\n\n  if (assetsQuery.isLoading) {\n    return (\n      <TextLoading className={styles.loading}>\n        Loading Crypto Assets\n      </TextLoading>\n    );\n  }\n\n  if (assetsQuery.isError) {\n    return (\n      <>\n        <div className={styles[\"error__text\"]}>Error fetching assets!</div>\n        <button className=\"btn\" onClick={() => assetsQuery.refetch()}>\n          Refetch\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <div>\n      {assetsQuery.data &&\n        assetsQuery.data.map((item) => {\n          const isBeingWatched =\n            watchIdsQuery.data && watchIdsQuery.data[item.id];\n\n          return (\n            <Link to={`/${item.id}`} className={styles[\"link\"]}>\n              <div className={styles[\"asset-item\"]} key={item.id}>\n                <div>\n                  <div className={styles[\"asset-item__name\"]}>{item.name}</div>\n                  <div className={styles[\"asset-item__symbol\"]}>\n                    {item.symbol}\n                  </div>\n                </div>\n                <div className={styles[\"asset-item__price\"]}>\n                  {Math.round(Number(item.priceUsd) * 10000) / 10000.0}\n                </div>\n                <button\n                  className={clsx(\n                    \"btn\",\n                    styles[\"asset-item__watch\"],\n                    isBeingWatched && \"btn--warning\"\n                  )}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (isBeingWatched) {\n                      handleDeleteFromWatchIds(item.id);\n                    } else {\n                      handleAddToWatchIds(item.id);\n                    }\n                  }}\n                >\n                  {isBeingWatched ? \"Unwatch\" : \"Watch\"}\n                </button>\n              </div>\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport { getAssetById } from \"../api\";\nimport { useDeleteWatchIdsMutation } from \"../hooks/useDeleteWatchIdMutation\";\nimport { TextLoading } from \"./TextLoading\";\nimport styles from \"./WatchAsset.module.css\";\n\nexport interface WatchAssetItemProps {\n  id: string;\n}\n\nexport const WatchAssetItem: FC<WatchAssetItemProps> = ({ id }) => {\n  const history = useHistory();\n  const assetQuery = useQuery([\"assets\", id], () => getAssetById(id), {\n    refetchInterval: 1500,\n  });\n\n  const deleteFromWatchIdsMutation = useDeleteWatchIdsMutation();\n\n  const handleUnwatchClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    deleteFromWatchIdsMutation.mutate(id);\n  };\n\n  const handleAssetClick = () => {\n    history.push(`/${id}`);\n  };\n\n  return (\n    <div className={styles[\"watch-asset\"]} onClick={handleAssetClick}>\n      {assetQuery.isLoading ? (\n        <>\n          <div className={styles[\"watch-asset__id\"]}>{id}</div>\n          <TextLoading>Loading</TextLoading>\n        </>\n      ) : (\n        assetQuery.data && (\n          <>\n            <div>\n              <div className={styles[\"watch-asset__name\"]}>\n                {assetQuery.data.name}\n              </div>\n              <div className={styles[\"watch-asset__symbol\"]}>\n                {assetQuery.data.symbol}\n              </div>\n              <div className={styles[\"watch-asset__price\"]}>\n                {Math.round(Number(assetQuery.data.priceUsd) * 10000) / 10000}\n              </div>\n            </div>\n            <button className={\"btn btn--warning\"} onClick={handleUnwatchClick}>\n              Unwatch\n            </button>\n          </>\n        )\n      )}\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getWatchIds } from \"../api\";\nimport { TextLoading } from \"./TextLoading\";\nimport { WatchAssetItem } from \"./WatchAsset\";\nimport styles from \"./WatchAssetList.module.css\";\n\nexport interface WatchAssetListProps {}\n\nexport const WatchAssetList: FC<WatchAssetListProps> = () => {\n  const watchingAssetsQuery = useQuery(\"watching_assets\", () => getWatchIds());\n\n  return (\n    <div className={styles.container}>\n      <h2>Watching Assets</h2>\n      {watchingAssetsQuery.isLoading ||\n        (watchingAssetsQuery.isFetching && <TextLoading>Loading</TextLoading>)}\n      {watchingAssetsQuery.data &&\n        Object.keys(watchingAssetsQuery.data).length === 0 && (\n          <div>You are not watching any crypto's, that is sad :(</div>\n        )}\n      {watchingAssetsQuery.data && (\n        <div className={styles[\"watch-asset-list\"]}>\n          {Object.keys(watchingAssetsQuery.data).map((item) => {\n            return <WatchAssetItem id={item} key={item} />;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useMemo } from \"react\";\nimport { FC, createContext, useReducer } from \"react\";\n\nexport type State = { showAssets: boolean };\n\nexport type Action = { type: \"EXPAND_ASSETS\" } | { type: \"COLLAPSE_ASSETS\" };\n\nexport const initialState: State = { showAssets: false };\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"EXPAND_ASSETS\": {\n      return { ...state, showAssets: true };\n    }\n    case \"COLLAPSE_ASSETS\": {\n      return { ...state, showAssets: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport interface GlobalUIContextType {\n  state: State;\n  dispatch: React.Dispatch<Action>;\n}\n\nexport const GlobalUIContext = createContext<GlobalUIContextType>(null!);\n\nexport const GlobalUIProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const value = useMemo(() => {\n    return { state, dispatch };\n  }, [state]);\n\n  return (\n    <GlobalUIContext.Provider value={value}>\n      {children}\n    </GlobalUIContext.Provider>\n  );\n};\n","import { FC } from \"react\";\nimport { AssetList } from \"../components/AssetList\";\nimport { WatchAssetList } from \"../components/WatchAssetList\";\nimport { useGlobalUI } from \"../hooks/useGlobalUI\";\n\nexport const HomePage: FC = () => {\n  const globalUI = useGlobalUI();\n\n  const handleClickAssetToggle = () => {\n    if (globalUI.state.showAssets) {\n      globalUI.dispatch({ type: \"COLLAPSE_ASSETS\" });\n    } else {\n      globalUI.dispatch({ type: \"EXPAND_ASSETS\" });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Crypto Monitor</h1>\n      <p>\n        React app built with <strong>React Query</strong> ⚛️ 🚀 Read the code{\" \"}\n        <a\n          href=\"https://github.com/gurleensethi/crypto-monitor\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          here.\n        </a>\n      </p>\n      <br />\n      <WatchAssetList />\n      <button className=\"btn\" onClick={handleClickAssetToggle}>\n        {globalUI.state.showAssets ? \"Hide All Assets\" : \"Show All Assets\"}\n      </button>\n      {globalUI.state.showAssets && (\n        <>\n          <h2>Assets</h2>\n          <AssetList />\n        </>\n      )}\n    </div>\n  );\n};\n","import { useContext } from \"react\";\nimport { GlobalUIContext, GlobalUIContextType } from \"../context/GlobalUI\";\n\nexport const useGlobalUI = (): GlobalUIContextType => {\n  const context = useContext(GlobalUIContext);\n\n  if (!context) {\n    throw new Error(`No GlobalUIContext.Provider found!`);\n  }\n\n  return context;\n};\n","import clsx from \"clsx\";\nimport { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { getAssetById, getPriceHistory } from \"../api\";\nimport { TextLoading } from \"../components/TextLoading\";\nimport styles from \"./Asset.module.css\";\n\nexport type AssetPageParams = {\n  assetId: string;\n};\n\nexport const AssetPage: FC = () => {\n  const { assetId } = useParams<AssetPageParams>();\n\n  const assetQuery = useQuery(\n    [\"assets\", assetId],\n    () => getAssetById(assetId),\n    { refetchInterval: 1500 }\n  );\n\n  const priceHistory = useQuery(\n    [\"assets\", assetId, \"history\"],\n    () => getPriceHistory(assetId),\n    { enabled: !!assetQuery.data?.id, cacheTime: 0 }\n  );\n\n  if (assetQuery.isLoading) {\n    return <TextLoading>Loading</TextLoading>;\n  }\n\n  if (assetQuery.isError) {\n    return (\n      <div>\n        <div>\n          Unable to get data from given asset :( Please try again later.\n        </div>\n        <Link to=\"/\">\n          <button className={clsx(\"btn\", styles[\"home-button\"])}>\n            Go Home\n          </button>\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Link to=\"/\" className={styles[\"back\"]}>\n        {\"<< Home\"}\n      </Link>\n      {assetQuery.data && (\n        <>\n          <div className={styles[\"asset\"]}>\n            <div className={styles[\"asset__id\"]}>({assetQuery.data.id})</div>\n            <h1 className={styles[\"asset__name\"]}>\n              <span\n                className=\"zoom-in-anim\"\n                style={{ display: \"inline-block\" }}\n              >\n                🚀\n              </span>{\" \"}\n              {assetQuery.data.name}\n            </h1>\n            <div className={styles[\"asset__price\"]}>\n              {Number(assetQuery.data.priceUsd).toFixed(4)}\n            </div>\n            <div className={styles[\"asset__details\"]}>\n              <div>\n                <h3 className={styles[\"asset__label\"]}>🧢 Market Cap</h3>\n                <p className={styles[\"asset__value\"]}>\n                  {Number(assetQuery.data.marketCapUsd).toFixed(4)}\n                </p>\n              </div>\n              <div>\n                <h3 className={styles[\"asset__label\"]}>📈 Supply</h3>\n                <p className={styles[\"asset__value\"]}>\n                  {Number(assetQuery.data.supply).toFixed(4)}\n                </p>\n              </div>\n              <div>\n                <h3 className={styles[\"asset__label\"]}>📉 Max Supply</h3>\n                <p className={styles[\"asset__value\"]}>\n                  {assetQuery.data.maxSupply\n                    ? Number(assetQuery.data.maxSupply).toFixed(4)\n                    : \"N/A\"}\n                </p>\n              </div>\n              <div>\n                <h3 className={styles[\"asset__label\"]}>٪ Change (24hr)</h3>\n                <p className={styles[\"asset__value\"]}>\n                  {Number(assetQuery.data.changePercent24Hr).toFixed(4)}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className={styles[\"price-history\"]}>\n            <h2>Price History</h2>\n            {priceHistory.isLoading && (\n              <TextLoading>Loading price history</TextLoading>\n            )}\n            {priceHistory.data && (\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart\n                  className={styles[\"price-history__chart\"]}\n                  data={priceHistory.data.map((item) => ({\n                    price: Number(item.priceUsd),\n                    date: new Date(item.date).toDateString(),\n                  }))}\n                >\n                  <XAxis dataKey=\"date\" />\n                  <YAxis domain={[\"dataMin\"]} />\n                  <Tooltip />\n                  <Legend />\n                  <Line\n                    type=\"basis\"\n                    dataKey=\"price\"\n                    stroke=\"coral\"\n                    strokeWidth={1.5}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { FC } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./pages/Home\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { AssetPage } from \"./pages/Asset\";\nimport { GlobalUIProvider } from \"./context/GlobalUI\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport const App: FC = () => {\n  return (\n    <div className=\"App\">\n      <GlobalUIProvider>\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n              <Route exact path=\"/:assetId\" component={AssetPage} />\n              <Route exact path=\"/\" component={HomePage} />\n            </Switch>\n          </BrowserRouter>\n          <ReactQueryDevtools initialIsOpen={false} position=\"bottom-right\" />\n        </QueryClientProvider>\n      </GlobalUIProvider>\n    </div>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error__text\":\"AssetList_error__text__3OeHd\",\"link\":\"AssetList_link__35vHp\",\"asset-item\":\"AssetList_asset-item__2el6h\",\"asset-item__name\":\"AssetList_asset-item__name__1ua-v\",\"asset-item__symbol\":\"AssetList_asset-item__symbol__wkPal\",\"asset-item__price\":\"AssetList_asset-item__price__6fM0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"watch-asset\":\"WatchAsset_watch-asset__1YvnG\",\"watch-asset__id\":\"WatchAsset_watch-asset__id__2k4SC\",\"watch-asset__name\":\"WatchAsset_watch-asset__name__2Fysy\",\"watch-asset__symbol\":\"WatchAsset_watch-asset__symbol__3XQ5u\",\"watch-asset__price\":\"WatchAsset_watch-asset__price__2o3UR\"};"],"sourceRoot":""}